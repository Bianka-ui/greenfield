<?xml version="1.0" encoding="UTF-8"?>
<protocol name="dcbuffer" version="1">
    <copyright>
        Example HTML5 Protocol
        Copyright (C) 2017 Erik De Rijcke

        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU Affero General Public License as
        published by the Free Software Foundation, either version 3 of the
        License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
        GNU Affero General Public License for more details.

        You should have received a copy of the GNU Affero General Public License
        along with this program. If not, see &gt;http://www.gnu.org/licenses/&lt;.
    </copyright>

    <interface name="DcBufferFactory" version="1">
        <description>A global dc buffer factory. Used to create and associate dc buffers with the generic buffer.
        </description>

        <request name="createBuffer">
            <description>Create a new opaque buffer</description>
            <arg name="id" type="new_id" interface="GrBuffer"/>
        </request>

        <request name="createDcBuffer">
            <description>Create a dc buffer implementation for the given buffer argument.</description>
            <arg name="id" type="new_id" interface="DcBuffer"/>
            <arg name="buffer" type="object" interface="GrBuffer"/>
        </request>
    </interface>

    <interface name="DcBuffer" version="1">
        <description>A web rtc datachannel buffer. Contents are communicated over a udp datachannel.</description>

        <request name="datachannelId">
            <description>The datachannel id used by the client. This is set as soon as the buffer is created.
            </description>
            <arg name="id" type="string" summary="Id of the datachannel"/>
        </request>

        <request name="syn">
            <description>The serial of the latest buffer contents that were send over the udp datachannel. This is used
                to synchronize a buffer commit with the out of band content that arrives over the udp datachannel.
            </description>
            <arg name="serial" type="uint" summary="Serial of the send buffer contents"/>
        </request>

        <event name="ack">
            <description>Acknowledgement of the compositor about the arrival of the buffer content. This enables the
                client
                to resend the buffer content should the acknowledgment time out.
            </description>
            <arg name="serial" type="uint" summary="Serial of the received buffer contents"/>
        </event>
    </interface>

    <interface name="WrtcSignaling" version="1">
        <description>
            A global singleton. Functions as a signaling server to setup a web rtc peer connection.
        </description>

        <request name="clientIceCandidates" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </request>

        <request name="clientSdpOffer" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </request>

        <request name="clientSdpReply" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </request>

        <event name="serverSdpReply" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </event>

        <event name="serverSdpOffer" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </event>

        <event name="serverIceCandidates" since="1">
            <description/>
            <arg name="description" type="string" summary=""/>
        </event>
    </interface>
</protocol>